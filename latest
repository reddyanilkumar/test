https://wiki.apache.org/tika/RecursiveMetadata
http://stackoverflow.com/questions/28102943/apache-tika-1-7-parse-files-in-a-zip-archive
http://noolabitexx.googlecode.com/svn/NooLabTexxTika/src/org/NooLab/texxplugg/tika/TikaExtraction.java
http://yuluer.com/page/cibacjed-apache-tika-1-7-parse-files-in-a-zip-archive.shtml
https://stackoverflow.com/questions/29982173/crawl-online-directories-and-parse-online-pdf-document-to-extract-text-in-java
http://stackoverflow.com/questions/28288724/tika-packageparser-does-not-work-with-directories
package javatika;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.util.Date;
import java.util.zip.ZipEntry;
import java.util.zip.ZipFile;
import java.util.zip.ZipInputStream;

public class ZipReader
{
    // Expands the zip file passed as argument 1, into the
    // directory provided in argument 2
    public static void main(String args[]) throws Exception
    {
       
        // create a buffer to improve copy performance later.
        byte[] buffer = new byte[2048];

        // open the zip file stream
        //InputStream theFile = new FileInputStream("test.zip");
        ZipInputStream stream = new ZipInputStream(new FileInputStream("/home/anil/Anil/Dathena-Docs/Archive.zip"));
        ZipFile zipFile = new ZipFile("/home/anil/Anil/Dathena-Docs/Archive.zip");
        System.out.println(zipFile);
        String outdir = "docs/";

        try
       {

            // now iterate through each item in the stream. The get next
            // entry call will return a ZipEntry for each file in the
            // stream
            ZipEntry entry;
            int count = 0;
            while((entry = stream.getNextEntry())!=null)
            {
            	count++;
                String s = String.format("Entry: %s len %d added %TD",
                                entry.getName(), entry.getSize(),
                                new Date(entry.getTime()));
           //     System.out.println(s);

            }
          
            // Once we get the entry from the stream, the stream is
                 // positioned read to read the raw data, and we keep
                // reading until read returns 0 or less.
           //     String outpath = outdir + "/" + entry.getName();
                FileOutputStream output = null;
                try
                {
                    //output = new FileOutputStream(outpath);
                    int len = 0;
                    while ((len = stream.read(buffer)) > 0)
                    {
                        System.out.println(buffer);
                    }
                }
                finally
                {
                    // we must always close the output file
           //       if(output!=null) output.close();
                }
           
        }
        finally
        {
            // we must always close the zip file.
            stream.close();
       }
   }
}
